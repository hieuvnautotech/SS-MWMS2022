

using Mvc_VD.Classes;
using Mvc_VD.Models;
using Mvc_VD.Models.DTO;
using Mvc_VD.Models.FG;
using Mvc_VD.Models.NewVersion;
using Mvc_VD.Models.Request;
using Mvc_VD.Models.Response;
using Mvc_VD.Models.TIMS;
using Mvc_VD.Models.WIP;
using Mvc_VD.Models.WOModel;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mvc_VD.Services.Interface
{
    public interface ITimsService
    {
        Task<IReadOnlyList<DatawActualPrimaryResponse>> getListPO(DataWActualPrimaryReq item);
        Task<IReadOnlyList<WActualAPI>> GetActualInfo(string AtNo);
        Task<IReadOnlyList<WMaterialnfo>> GetDataActualSX(string AtNo);
        Task<DBobbinInfo> FindOneDBobbinInfo(string bb_no);
        Task<Models.NewVersion.MaterialInfoMMS> FindOneMaterialInfoByMTCdBBNo(string mt_cd, string bb_no);
        Task<int> UpdateMTQR_RDList(int wmtid, string user);
        Task<IReadOnlyList<TimsReceivingScanModel>> GetListMaterialTimsReceivingPO(string po_no, string product, string input_dt, string bb_no);
        Task<IReadOnlyList<ListWorker>> GetListWorker(String UserId, string UserName, string PositionCode);
        Task<IReadOnlyList<DProUnitStaffAPI>> FindDProUnitStaffByStaffIdIdActual(int id_actual, string staff_id);
        Task<IReadOnlyList<ListStaffTims>> GetTIMSListStaff(int id_actual, string staff_id, string StartDate, string EndDate,string staff_name);
        Task<bool> CheckExistsWorker(string StaffId);
        Task<string> FindDProUnitStaffByStaffId(int psid, string staff_id, int id_actual);
        Task<DProUnitStaffAPI> FindOneDProUnitStaffById(int psid);
        Task<bool> CheckExistsDuplicateTime(string staff_id, string start, string end, int psid);
        Task<int> UpdateDProUnitStaff(DProUnitStaffAPI item);
        int getTotalRecordBobbinInfo();
        Task<Models.TIMS.WActual> FindOneWActual(int id_actual);
        Task<int> CheckShiftWithPisd(int psid);
        Task<int> CheckWMaterialInfoByStaffIdOQC(string StaffId, int IdActual);
        Task<int> CheckMaterialforTims(string StaffId, int IdActual);
        Task<int> DeleteDProUnitStaff(int id_actual, int psid, string staff_id, string ChgId);
        Task<IReadOnlyList<WMaterialnfo>> FindAllWMaterialInfoByStaffIdOQC(string staff_id_oqc, int id_actual, string start_dt, string end_dt);
        Task<IReadOnlyList<d_bobbin_info>> GetListBoBinPopup(string bb_no, string bb_nm, string mt_cd, int id_actual, int intpage, int introw);
        Task<DBobbinLctHist> FindOneBobbin_lct_hist(string bb_no,string mt_cd);
        Task<int> UpdateBobbinInfo(string chg_id, string mt_cd, int bno);
        Task<WMaterialnfo> FindOneWMaterialInfoLike(string mt_cd);
        Task<WMaterialnfo> FindOneWMaterialInfoLikeTIMS(string mt_cd);
        Task<int> UpdateMaterialStaffQty(string status, string ChgId, int wmtid,int IdActualOqc);
        Task<ActualPrimary> FindOneWActualPrimaryByAtNo(string at_no);
        Task<int> InsertMaterialInfoTIMMS(Models.NewVersion.MaterialInfoTIMS item);
        Task<IReadOnlyList<Models.NewVersion.MaterialInfoTIMS>> FindAllMaterialByMtCdLike(string bien_first);
        Task<IReadOnlyList<Models.NewVersion.MaterialInfoTIMS>> GetListMappingStaTims_FindMerge(string code);
        Task<IReadOnlyList<MaterialInfoDivideMMS>> FindAllMaterialByMtCdMGLike(string bien_first);
        Task<IReadOnlyList<MaterialInfoDivideMMS>> FindAllMaterialByMtCdMGMMSLike(string bien_first);
        Task<int> InsertMaterialMapping(MaterialMappingTIMS data);
        Task<int> UpdateMtCdBobbinHistInfo(string mt_cd, int blno);
        Task<int> InsertBobbinHist(DBobbinLctHist bobbinhist);
        Task<int> CheckMaterialMappingTims(string MaterialNo, string MaterialCode, string MaterilaLot);
        Task<int> CheckShift(int psid, int id_actual);
        Task<string> GetAtNoFromIdActual(int IdActual);
        Task<WMaterialnfo> FindOneWMaterialInfoTims(int wmtid);
        Task<IReadOnlyList<MaterialMappingsTims>> GetListMaterialMapping(string MtLot);
        Task<IReadOnlyList<WMaterialnfo>> FindAllWMaterialInfoByStaffId(string staff_id, int id_actual, string start_dt, string end_dt);
        Task<BobbinInfo> GetOneDBobbinInfoWithMtCdIsNULL(string bb_no);
        Task<string> CheckMaterialMappingForTimsRoll(int IdActual, string StaffId, string material_code);
        Task<int> InsertMultiMaterialMppingTims(string mtcd,string MtLot, string User, string material_code);
        Task<int> InsertMultiMaterialMppingTimsDV(string mtcd, string MtLot, string User, string bb_bo);
        Task<int> UpdateBobbinMaterinInfoTimsDV(string mtlot, string mtcd, string userid, string bbno);
        Task<int> UpdateMultiWmaterialInfoMMS(string MtLot, string User, int IdActualOqc);
        Task<int> SumGroupQtyWMaterialInfo(string mt_cd);
        Models.NewVersion.MaterialInfoMMS FindWMaterialInfoByMTQRCode(string mt_qrcode);
        Task<DBobbinLctHist> FindAllBobbin_lct_histByBBNo(string bb_no);
        Task<WMaterialnfo> FindOneWMaterialInfotypeRoll(string mt_cd);
        Task<WMaterialnfo> FindOneWMaterialInfotypeRollFromTIMS(string mt_cd);
        //Task<int> CheckMaterialMappingTims(string MaterialNo, string MaterialCode, string MaterialLot);
        Task<WMaterialnfo> FindOneWMaterialInfoLikeForRoll(string mt_cd);
        Task<Models.NewVersion.MaterialInfoTIMS> GetWMaterialInfowithmtcd(string mt_cd);

        Task<Models.NewVersion.MaterialInfoMMS> GetWMaterialInfoMMS(string mt_lot);
        Task<int> CheckMaterialMapping(string mt_cd, string mt_lot);
        Task<w_material_mapping> Getmaterialmappingreturn(string mt_cd, string mt_lot);
        Task<Actual> GetWActual(int id_actual);
        Task<w_actual_primary> GetwactualprimaryFratno(string at_no);
        Task<IReadOnlyList<m_facline_qc>> Getmfaclineqc(string ml_no, string fq_no, string ml_tims);
        Task<int> CheckExistMaterialMappingById(string ml_tims);
        Task<int> UpdateGroupQTYRealQTYTims(int GroupQTY, int RealQTY, string MaterialCode, string ChangeID);
        Task<int> UpdateFaclineQty(int checkQty, int okQty, int fqNo, string changeId, int ng_qty, int remain_qty);
        Task<int> GetSumQtyFacline(string ml_tims);
        Task<BobbinLctHist> GetdbobbinlcthistFrbbno(string bb_no);
        Task<BobbinInfo> GetBobbinInfo(string bb_no);
        Task<int> UpdateRemainQTYTims(int GroupQTY, string statusCode, string MaterialCode, string ChangeID);
        Task<int> UpdateRemainQTYmms(int GroupQTY, string statusCode, string MaterialCode, string ChangeID);
        Task<MaterialInfoTimsDTO> GetWMaterialInfowithmtcdNew(string mt_cd);
        Task<MaterialInfoTimsDTO> GetWMaterialInfowithmtcdNewMMS(string mt_cd);
        Task<int> UpdateUseYnMaterialMapping(string UseYn, string ChangeId, int wmmid);
        Task<int> GetDefactActual(int id_actual);
        Task<int> UpdateDefectActual(double? defect, int id_actual);
        Task<string> GetmfaclineqcSearch(string fq_no);
        Task<qc_item_mt> Getqcitemmt(string item_vcd);
        Task<int> InsertMFaclineQC(m_facline_qc mFaclineQC);
        Task<int> CheckMaterialByMtCdLike(string bien_first);
        Task<int> UpdateUseYnMaterialMapping(string useyn, int wmmid, string userId);
        Task<int> UpdateActualNDefectForStaff(int idActual, int psId, int actual, int defect, string userId);
        Task<int> UpdateActualForOQC(int actual, int idActual, int psId, string userId);
        Task<int> getActualrealOQC(int IdActual, string StaffId, string StartDate, string EndDate);
        Task<int> getActualRealQTY(int IdActual, string StaffId, string StartDate, string EndDate);
        Task<int> updateQtyOqcforStaff(int idActual, int actualQty, int psId);
        Task<string> getNameActual(int idActual);
        Task<string> getStaffId(int psId);
        Task<int> getActualDefectforTims(int IdActual, string StaffId, string StartDate, string EndDate);
        Task<int> updateQtyforStaff(int idActual, int actualQty, int defectQty, int psId);
        Task<int> getActualQTYForActualTims(int IdActual);
        Task<int> UpdateTotalQTYActual(int totalQty, int id_actual);
        Task<int> InsertMaterialInfoTims(string materialCode, int grpQTy, int realQty, string reg_id, string materialLot);
        Task<int> UpdateNGPO(int realQty, string materialCode);
        Task<int> UpdateContainerOutput(string mt_cd, int qty);
        Task<int> UpdateMaterialmappinguseyn(string mt_lot, string mt_cd, string userid,bool active,string useyn);
        Task<int> UpdateMaterialmappingMMSuseyn(string mt_lot, string mt_cd, string userid,bool active);
        Task<int> UpdateGrqtyMaterialInfoTims(string materialCode, int grpQty, string statusCode, string userId);
        Task<int> UpdateGrqtyMaterialInfoMMS(string materialCode, int grpQty, string statusCode, string userId);
        Task<int> CheckGrqtyMaterialInfo(string mt_cd, string mt_sts_cd);
        Task<int> DeleteDBobbinLctHistforDevice(string mt_cd,string bbno);
        Task<int> UpdateBobbinInfowithmtcd(string mt_cd,string bbno,string userid);
        Task<int> GetDefactActualTimss(int id_actual);
        Task<int> UpdateDefectActualTims(int defect, int id_actual,string userid);
        Task<WMaterialInfoTmp> FindOneMaterialInfoByMTLot(string mt_lot);
        Task<IReadOnlyList<OKReason>> GetOKReason(string mt_lot, string PrimaryProduct, string don_vi_pr, string mt_cd, string product, string mt_no, string bb_no);
        Task<FaclineQc> GetFaclineQC(string item_vcd, string mt_cd, string mt_lot);
        Task<IReadOnlyList<WMaterialInfoOQCAPI>> GetListLotOQCpp(int id_actual_oqc, string staff_id_oqc);
        Task<IReadOnlyList<StampDetail>> GetListStamDetail(string product,string lotNo,string shift, string buyer_qr);
        Task<MaterialMappingTIMS> FindOneWMaterialMappingById(int wmmid);
        Task<int> UpdateWMaterialMappingById(string sts_share, int wmmid);
        Task<int> CheckShift(int psid);
        Task<IReadOnlyList<DProUnitStaff>> GetListStaff(int id, int psid);
        Task<MaterialInfoTIMS> GetMaterialInfoTIMSById(int id);
        Task<MaterialInfoTIMS> GetMaterialInfoTIMSByOQC(int id);
        List<MaterialMappingTIMS> CheckMaterialMappingTIMS(string mt_cd);
        Task<IReadOnlyList<MaterialMappingTIMS>> GetMaterialMappingTIMSByLot(string mt_lot);
        Task<IReadOnlyList<BobbinLctHist>> GetListDataBobbinLctHist(string bb_no, string mt_cd);
        int InsertIntoBobbinLctHist(BobbinLctHist item);
        Task<int> UpdateBobbinInfo(BobbinInfo item);
        Task<int> RemoveBobbinLctHist(int blno);
        Task<int> RemoveMaterialInfoTims(int wmtid);
        Task<MaterialMappingTIMS> GetMaterialMappingTimsById(int wmmid);
        List<MaterialMappingTIMS> GetListMaterialMappingReturn(string mt_cd, string mt_lot);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListDataMaterialInfoTIMS(string orgin_mt_cd);
        Task<IReadOnlyList<FaclineQC>> GetListDataFaclineQc(string ml_no, string ml_tims);
        Task<IReadOnlyList<FaclineQCValue>> GetListDataFaclineQcValue(string fq_no);
        Task<int> RemoveFaclineQC(int id);
        Task<int> RemoveFaclineQCValue(int id);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListMaterialInfoTIMS(string mt_cd);
        Task<int> RemoveMaterialMappingsTims(int id);
        Task<int> InsertMergeMaterial(WMaterialInfoTmp data);
        //Task<IReadOnlyList<WMaterialInfoTmp>> GetListMaterial(string wmtid, string mt_cd, string mt_no);
        //Task<int> UpdateMaterial(int quantity, int wmtid, string mt_sts_cd, string userid);
        //Task<int> UpdateQtyMaterialTims(int quantity, int wmtid, string userid);
        //Task<int> CountMaterialInfo(string LikeCondition);
        Task<bool> CheckExistMaterialMapping(string mt_cd, string mt_lot);
        Task<int> InsertMaterialMappingTims(w_material_mapping data);
        Task<IReadOnlyList<WMaterialInfoTmp>> Getdbobbinlcthist(int id_actual, string at_no, string bb_nm, string bb_no);
        Task<bool> CheckStaffShift(int id_actual, string staff_id);
        Task<string> GetNameStatusCommCode(string mt_sts_cd);
        //Task<Models.TIMS.WActual> FindOneWActual(int? id_actual);
        Task<IReadOnlyList<w_actual>> GetListWActualForProcess(string at_no);
        Task<IReadOnlyList<WMaterialInfoTmp>> GetListMaterial(int wmtid, string mt_cd, string mt_no);
        //Task<IReadOnlyList<MaterialInfoTam>> GetListMaterial(string wmtid, string mt_cd, string mt_no);
        Task<int> UpdateMaterial(int quantity, int wmtid, string mt_sts_cd, string userid);
        Task<int> UpdateQtyMaterialTims(int quantity, int wmtid, string userid);
         Task<int> CountMaterialInfo(string LikeCondition);
        //Task<int> InsertMergeMaterial(MaterialInfoTam data);
        Task<IReadOnlyList<PrintNGTimsReponse>> GetListDataPrintNGTims(string mt_cd, string at_no, string product);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListDataPrintNGOK();
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialInfoTimsByCode(string mt_cd);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialInfoTimsByBuyerQR(string buyer_qr);
        Task<int> InsertIntoMaterialDown(MaterialDown item);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialWithStatusOk(string mt_cd);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialInfoTimsByBuyerCode(string buyer_code);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialInfoMMSByOrgin(string orgin_mt_cd);
        Task<IReadOnlyList<MaterialDown>> GetMaterialDownByCode(string mt_cd);
        Task<IReadOnlyList<QCItemCheckMaterial>> GetQCItemCheckMaterial(string item_vcd);
        Task<IReadOnlyList<QCItemCheckDetail>> GetQCItemCheckMaterialDetail(string item_vcd, string check_id);
        Task<IReadOnlyList<FaclineQCValueResponse>> Getfacline_qc_value(string fq_no);
        Task<IReadOnlyList<Getfacline_qc_PhanLoaiReponse>> Getfacline_qc_PhanLoai(string item_vcd, string mt_lot);
        Task<IReadOnlyList<NGPO>> GetNotGoodPO(string product, string mt_cd, string mt_no, string PO);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListDataMaterialInfoTIMSById(List<int> id);
        Task<int> UpdateMaterialInfoTimsScan(string materialCode, int grpQty, string statusCode, string userId);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListNumberForTIMS(string mt_cd);
        Task<int> UpdateMaterialInfoTims(string materialCode, int grpQty, int realQty, string userId);
        Task<MaterialInfoTimsDTO> GetWMaterialInfowithmtcdTims(string mt_cd);
        Task<IReadOnlyList<ReceivingScanFGResponse>> GetListDataReceivingScanFG(string product, string buyer, string po, string lot_date, string lot_date_end);
        Task<IReadOnlyList<FGReceiveDataResponse>> CheckBuyerStatus(string buyerCode);
        Task<MaterialInfoTIMS> FindOneMaterialInfoById(string buyerCode);
        Task<IReadOnlyList<Generalfg>> FindOneBuyerInfoById(string buyerCode);
        Task<IReadOnlyList<StampDetail>> FindStamp(string buyerCode);
        Task<string> GetStyleNameFromStyleInfo(string buyerCode);
        Task<string> GetModelCodeFromStyleInfo(string buyerCode);
        Task<int> UpdateReceFGWMaterialInfo(MaterialInfoTIMS item, string ListBuyerCode);
        Task<int> InsertToGeneralFGByConditiion(string ListBuyerCode, string modelCode, string userID);
        Task<int> InsertToGeneralFG(Generalfg item);
        Task<int> InsertMaterialMappingTIMS(MaterialMappingTIMS data);
        Task<int> UpdateMaterial1(double? quantity, int wmtid, string status);
        Task<int> UpdateMaterial2(double? quantity, int wmtid);
        Task<int> InsertTmpMaterialInfo(MaterialInfoTam item);

        Task<IReadOnlyList<ExportToExcelReceiveFGResponse>> ExportToExcelReceiveFG(string product, string buyer, string po_no, DateTime? lot_date, DateTime? lot_date_end);
        Task<IReadOnlyList<Models.NewVersion.MaterialInfoTIMS>> FindAllMeterialChangestPackingweb(int wmtid);
        Task<int> UpdateWMaterialInfoByIdMultiple(string mt_sts_cd, string chg_id, string end_production_dt, int wmtid);
        Task<int> UpdateWMaterialInfoByIdMultipleforReturn(string mt_sts_cd, string chg_id, string end_production_dt, int wmtid);
        Task<Models.NewVersion.MaterialInfoTIMS> FindAllMeterialChangestPacking(int wmtid);

        //*********************************************
        Task<IReadOnlyList<CommCode>> GetTIMSProcesses();
        Task<DBobbinLctHist> FindBobbinLctHist(string bb_no);
        Task<MaterialInfoTIMS> CheckMaterialForDiv(string mt_cd);
        Task<int> CheckMaterialMappingTims(string mt_cd);
        Task<int> CheckStaffShiftForId(int id_actual, int psid);
        Task<int> UpdateMaterialInfoTims(MaterialInfoTIMS item);
        Task<int> UpdatePartialBobbinInfo(string mt_cd);
        Task<int> GetTotalwMaterialInfoDV(string mt_cd);
        Task<int> DeleteBobbinHistoryDevideSta(string mt_cd);
        Task<int> InsertIntoMappingDevideSta(string bobbin, string mt_cd);
        Task<int> CheckWMaterialMapForDV(string mt_cd);
        Task<int> CheckWMaterialMappingForRedo(string mt_cd);
        Task<IReadOnlyList<WMaterialnfoDV>> DSWMaterialDV(string mt_cd);
        Task<int> SumGrqtyDSWMaterialDV(string mt_cd);
        Task<int> UpdateMaterinInfoTims(MaterialMappingTIMS item);
        Task<int> UpdateWMaterialQtyForRedo(double? gr_qty, string mt_cd);
        Task<int> DeleteWMaterialQtyForRedo(string mt_cd);
        Task<int> DeleteWMaterialMappingForRedo(string mt_cd);
        Task<int> DeleteWMaterialMappingWithMtLot(string mt_cd);
        Task<int> DeleteBoBbinHisForRedo(int blno);
        Task<int> UpdateBobbinInfoForRedo(int bno);
        Task<MaterialInfoTIMS> GetWMaterialInfoTIMS(int id);
        Task<string> CheckBobbinHistory(string bb_no);
        Task<string> CheckWMaterialHasNG(string mt_cd);
        Task<string> CheckFaclineQCHasNG(string ml_no);
        Task<string> CheckWProductQCHasNG(string ml_no);
        Task<MaterialInfoTIMS> GetMaterialInfoTimsOfDevice(string mt_cd, string status);
        Task<MaterialInfoTIMS> GetMaterialInfoTimsOfDevice(string mt_cd);
        Task<MaterialMappingTIMS> GetMaterialMappingTIMSById(int wmmid);
        Task<IReadOnlyList<MaterialMappingTIMS>> GetListDataMaterialMappingTIMSById(string mt_cd, string mt_lot);
        Task<IReadOnlyList<BobbinInfo>> SearchBobbinInfo(string bb_no, string bb_nm, string mt_cd, int intpage, int introw);
        int GettotalRowSearchBobbinInfo(string bb_no, string bb_nm, string mt_cd);
        Task<IReadOnlyList<comm_dt>> GetStaff(string mtcd, string useyn);

        Task<IReadOnlyList<comm_dt>> GetCommon(string code);
        Task<IReadOnlyList<Actual>> FindAllWActualByAtNo(string at_no);
        Task<int> CheckDMaterialInfo(string mt_no);

        Task<int> DeleteActualForTIMS(int id);
        List<truyxuatlot> Truyxuatlistlot(string mt_cd, string tentam, string buyer_qr,string atno);
        Task<IReadOnlyList<MaterialMappingTIMS>> GetMaterialMappingTIMSByLotCancel(string mt_lot);
        Task<int> UpdateWMaterialInfoById(int id_actual_oqc, string staff_id_oqc, string mt_sts_cd, string chg_id, int wmtid);
        Task<IReadOnlyList<w_product_qc>> Checkwproductqc(string material_code);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListmtmappingOQC(string product, string bb_bo, string at_no);
        Task<MaterialInfoTIMS> GetMaterialInfoTimsOfDeviceGrpQTY(string mt_cd);
        Task<int> RemoveBobbinLctHistwithbbno(string bbno);
        Task<Models.NewVersion.MaterialInfoMMS> GetMaterialInfoTimsOfDeviceGrpQTYMMS(string mt_cd);
        Task<bool> CheckQRBuyer(string bb_no);
        Task<IReadOnlyList<MaterialInfoTIMS>> CheckwmaterialinfoMappingbuyer(string mt_cd, string mt_sts_cd, string lct_cd);
        Task<string> GetProductWactualPrimary(string mt_cd, string mt_sts_cd, string lct_cd);
        Task<stamp_detail> Getstampdetail(string buyer_qr);
        Task<d_style_info> GetStyleNo(string style_no);
        Task<int> Insertstampdetail(stamp_detail item);
        Task<int> Deletedbobbininfo(int bno);
        Task<int> UpdateBuyerCodeforTims(string buyer_code, int wmtid, string chgid);
        Task<int> GetQrcodeBuyer(string buyer_qr);
        Task<IReadOnlyList<InventoryGeneralResponse>> GetInventoryInfoGenerals(string mtCode, string sVBobbinCd, string prd_cd, string recDateStart, string recDateEnd, string mtNoSpecific, string status,string bom_type, string po,string model);
        Task<IReadOnlyList<GetInventoryGeneralDetailResponse>> GetInventoryDetail(string prd_cd, string mtCode, string sVBobbinCd, string recDateStart, string recDateEnd, string ProSpecific, string status, string po);

        #region WareHouse Common
        Task<IReadOnlyList<CommMt>> GetDataComCode();
        Task<int>CountComCode();
        Task<CommMt> GetLastDataComCode();
        Task<IReadOnlyList<CommMt>> SearchDataCommCode(string mt_cd, string mt_nm, string mt_exp);
        Task<IReadOnlyList<WarehouseCommonResponse>> getWHSCommonDetailData(string mt_cd);
        Task<CommMt> GetCommMtById(int Id);
        Task<int> InsertIntoCommMt(CommMt item);
        Task<int> RemoveCommMt(int Id);
        Task<int> UpdateCommMt(CommMt item);
        Task<IReadOnlyList<CommCode>> GetListDataCommDTByMtCd(string mt_cd);
        Task<CommCode> GetCommCodeById(int Id);
        Task<int> RemoveCommDT(int Id);
        Task<int> CountCommDT(string dt_cd, string mt_cd);
        Task<int> InsertIntoCommDT(CommCode item);
        Task<CommCode> GetDataCommDTById(int Id);
        Task<CommCode> GetDataCommDT(int cdid, string mt_cd);
        Task<int> UpdateCommDT(CommCode item);

        #endregion
        Task<DProUnitStaffAPIRespond> FindOneDProUnitStaffReturnByPsid(int psid);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListOKPO(string mt_cd, string mt_no, string bb_no, string product, string at_no, string staff_id);
        Task<IReadOnlyList<DatawActualPrimaryResponse>> GetAllFinishProducts(string product, string product_name, string model, string at_no, string regstart, string regend);
        Task<int> ChecklistMatialTIMS(string mt_cd);
        Task<IReadOnlyList<MaterialInfoTIMS>> CheckTimsReceiScanMLQR(string mt_cd, int rowpan);
        Task<int> CheckRecevingScanM(string wtmid);
        Task<int> UpdateRecevingScanM(string wtmid, string status, string locationcode, string tolctcode, string userid);
        Task<IReadOnlyList<DatawActualPrimaryResponse>> GetAllRecevingScanM(string wtmid);
        Task<IReadOnlyList<DatawActualPrimaryResponse>> GetAllShippingScanMLQR(string buyerqr, string status, string lctcd);
        Task<int> CheckStatusBuyer(string buyerqr);
        Task<IReadOnlyList<ListStatusBuyer>> GetlistBuyer(string buyerqr);
        Task<int> ChecStatusBobbin(string bbno);
        Task<Models.NewVersion.MaterialInfoMMS> FindWMaterialInfoByWmtid(int wmtid);
        Task<int> UpdateUseYnMaterialMappingwithMtCd(string UseYn, string ChangeId, string mtcd);
        Task<int> UpdateUseYnMaterialIndfowithMtCd(string UseYn, string ChangeId, string mtcd);
        Task<int> UpdateBobbinInfowitbbno(string bbno, string userid);
        Task<IReadOnlyList<StatusBobbin>> GetProGetInfoBobin(string bbno);
        Task<IReadOnlyList<StatusBobbin>> GetProGetInfoBobinMMS(string bbno);
        Task<int> UpdateExtnoMaterialIndfowithWMTID(string extno, string status, string lctcd, string tolctcd, string ChangeId, string wmtid);
        Task<int> Updatewextinfo(string alert, string extno);
        Task<IReadOnlyList<qc_item_mt>> GetqcitemmtWithQCTYpe(string delyn, string itemtype, string qctype, string itemvcd, string itemnm, string itemexp);
        Task<int> UpdateStatusWMaterialInfoById(string mt_sts_cd, string chg_id, int wmtid);
        Task<MaterialInfoTIMS> GetListDataMaterialInfoTIMSBywmtid(int wmtid);
        Task<int> InsertWMaterialInfoTims(int countreturn, int soluong, string userid, string mtcd);
        Task<int> UpdateMaterialmappingwithmtcd(string mt_cd, string userid, bool active, string useyn);
        Task<IReadOnlyList<QCItemCheck_Mt_Model>> GetQCItemCheckMaterialwithitemvcd(string item_vcd);
        Task<IReadOnlyList<ViewQCModel>> GetQCItemCheckMaterialDetailwithcheckcd(string item_vcd, string check_id);


        Task<IReadOnlyList<WMaterialInfoQRCode>> PrintQRCodeMaterial(List<string> listId);
        Task<IReadOnlyList<m_facline_qc>> GetmfaclineqcwithId(int id);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetWMaterialInfoWithmtcdLike(string mt_cd);
        Task<int> CheckMt_cdInTims(string mtcd);
        Task<IReadOnlyList<DProUnitStaffAPI>> FindDProUnitStaffByIdActual(int id_actual, string staff_id, string datee);
        Task<IReadOnlyList<FaclineQc>> GetFaclineQCWithfqno(string fqno);
        Task<IReadOnlyList<m_facline_qc>> GetFaclineQCWithfqnos(int fqno);
        Task<FaclineQCValue> GetListDataFaclineQcValuewithId(int id);
        Task<int> Updatemfaclineqcvalue(int checkqty, string userid, int id);
        Task<int> GetQTYmfaclineqcvalue(string fqno);
        Task<IReadOnlyList<m_facline_qc>> GetListDataFaclineQcwithmlno(string ml_no);
        Task<int> UpdateRemainQTYInfoTims(int GroupQTY, string statusCode, string MaterialCode, string ChangeID, int alertng);
        Task<int> GetDefetcActual(int idacutal, string status);
        Task<IReadOnlyList<MaterialInfoTIMS>> CheckwmaterialinfoMappingbuyerwmtid(int wmtid,string MaterialCode, string lct_cd);
        Task<int> SPUpdateDestroy(int id, string status,string mt_cd, string bb_no, string userid);
        Task<IReadOnlyList<viewtimsinventorygeneral>> Getviewtimsinventorygeneral(int id);
        Task<int> SPUpdatesRedo(int id, string sts_update, string userid);
        Task<MaterialInfoTIMS> Getwmtinfotimswithwmtid(int wmtid, string status, string locationcode, string MaterialCode);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetWmtInfoTimsWithbbno(string bb_no);
        Task<lct_info> Getlctinfo(string lct_cd);
        Task<IReadOnlyList<FaclineQC>> GetListDataFaclineQcwithmltims(string ml_tims);
        Task<IReadOnlyList<FaclineQC>> GetListDataFaclineQcwithfqno(string fq_no);
        Task<qc_itemcheck_dt> Getqcitemcheckdt(int icdno);
        Task<int> inertmfaclineqcvalue(m_facline_qc_value item);
        Task<MaterialInfoTIMS> GetWMaterialInfoTIMSwithstatuswmtid(int id, string status);
        Task<IReadOnlyList<w_material_model>> Getwmaterialmodel(string wmtid);
        Task<IReadOnlyList<w_material_model>> GetwmaterialmodelPrintQR(string mtno, string returndate, string recevicedtstart, string recevicedtend);
        Task<IReadOnlyList<w_material_model>> GetwmaterialmodelPrintQRDetail(string mtno);
        Task<IReadOnlyList<WMaterialnfo>> FindDetailActualStaffOQC(string staff_id_oqc, int id_actual, string end_dt, string start_dt);
        Task<IReadOnlyList<WMaterialnfo>> GetTIMSActualDetailByStaff(string staff_id, int id_actual, string start_dt, string end_dt);
        Task<IReadOnlyList<TIMSInventoryModel>> GetspTIMSInventoryGeneralUnion(string mtCode, string mtNo, string sVBobbinCd, string recDate, string prd_cd);
        Task<IReadOnlyList<TIMSInventoryExcel>> GetspTIMSInventoryGeneralExcel(string status, string po, string model, string prd_cd, string bom_type, string mt_cd, string VBobbinCd, string endDate, string startDate);
        Task<IReadOnlyList<w_material_model>> GetwmaterialmodelqrPrintQr(string mtno);
        Task<WMaterialInfoStamp> ViewStatusTemGoi(string buyerCode);
        Task<w_box_mapping> CheckTemGoimappingBox(string buyerCode);
        Task<IReadOnlyList<w_ext_info>> GetListwextinfo(string extno, string extnm);
        Task<IReadOnlyList<WMaterialnfo>> GetListMLNO(string buyer_qr, string mt_cd, string mt_no);
        Task<IReadOnlyList<d_style_info>> GetListdstyleinfo(string productCode, string productName, string modelCode);
        Task<string> GetUname(string userid);
        Task<DBobbinInfo> FindOneDBobbinInfomtcd(string bb_no, string mtcd);
        Task<IReadOnlyList<WMaterialMapping>> FindAllWMaterialMappingByMtcdUseYn(string mt_cd, string use_yn);
        Task<IReadOnlyList<lct_info>> GetListlctinfo(string lct_cd);
        Task<lct_info> GetListlctinfowithlctno(int lctno);
        Task<int> InsertLctInfo(lct_info item);
        Task<int> UpdateLctInfo(lct_info item);
        Task<IReadOnlyList<lct_info>> GetListSearchlctinfo(string lct_cd, string lct_cds, string index_cd);
        Task<int> UpdateRecevingFG(int wtmid, string status, string locationcode, string tolctcode,string fromlctcd, string userid);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetListMaterialInfoTimsByBuyerQR(string buyer_qr);
        Task<int> UpdateRecevingFGwithinputdt(int wtmid, string status, string locationcode, string tolctcode, string fromlctcd, string userid, string inputdt);
        Task<IReadOnlyList<MaterialInfoTIMS>> Getwmtinfotimswithlctcd(string locationcode);
        Task<MaterialInfoTIMS> Getwmtinfotimswithlctcdandbuyer(string locationcode, string buyerqr);
        Task<IReadOnlyList<WMaterialnfo>> GetListMLNOwithextno(string ext_no);
        Task<IReadOnlyList<WMaterialnfo>> GetListShippingScanBuyerQRFG(string buyer_qr);
        Task<IReadOnlyList<StampDetail>> FindStampwithboxno(string boxno);
        Task<IReadOnlyList<w_box_mapping>> CheckTemGoimappingBoxwithboxno(string boxno);
        Task<IReadOnlyList<MaterialInfoTIMS>> GetMaterialInfoTimsByBuyerQRFg(string buyer_qr);
        Task<IReadOnlyList<WMaterialnfo>> GetListShippingScanBuyerQRFGS(string buyer_qr);
        Task<int> Updatechangestsfgtims(int wtmid, string status, string locationcode, string userid);
        Task<w_box_mapping> CheckTemGoimappingBoxwithbmno(int bmno);
        Task<int> UpdatemtcdforBobbinInfoForRedo(string bbno, string mtcd);

        Task<Models.NewVersion.MaterialInfoTIMS> GetMaterialInfoTIMS(string BB_No);
        Task<IEnumerable<MaterialMappingTIMS>> GetListMaterialMappingTIMS(string mt_cd);
        Task<IEnumerable<MaterialInfoTIMS>> GetListDataMaterialInfoTIMSStatus(string mt_cd);
        List<ATMTIMS> SearchATMTims(string product_id, string name_id, string at_id, string reg_dt, string reg_dt_end,string bom_type);
        List<ATMTIMS> SearchATMTimsS(string product_id, string name_id, string at_id, string reg_dt, string reg_dt_end,string bom_type);
        List<ATMTIMS> SearchATMTims1(string product_id, string name_id, string at_id, string reg_dt, string reg_dt_end, string bom_type, int intpage, int introw);
        List<ATMTIMS> SearchATMTimsS1(string product_id, string name_id, string at_id, string reg_dt, string reg_dt_end,string bom_type ,int intpage,int introw);
        bool CheckPOMove(string at_no);
        List<ATMTIMS> SearchATMTimsOQC(string product_id, string name_id, string at_id, string reg_dt, string reg_dt_end);
        int GetRealQTYParent(string MaterialCodePar);
        int GetRealQTYMaterialCodeDevie(string MaterialCodeDV);
        int UpdateStatusMaterialParent(string MaterialCodePar);
        Task<string> GetGrade(string userid);
        Task<int> UpdateCompositeShipping(int w_mtid, string user_id, string output_date);
        Task<int> UpdateProcessToHieuSuat(string at_no);
        Task<int> UpdateActualIsFinish(int id_actual, bool IsFinished);
        Task<IReadOnlyList<WMaterialInfoTIMSAPIReceing>> GetDetailActualAPIReceiving(string date, string product, string shift);
        Task<IReadOnlyList<WMaterialInfoTIMSAPIRec>> GetDetailActualAPIOQC(int id_actual, string date, string shift);
        Task<int> TotalRecordsSearchShippingSortingTims(string ShippingCode, string productCode, string productName, string description);
        Task<IReadOnlyList<ShippingTIMSSortingModel>> GetListSearchShippingSortingTIMS(string ShippingCode, string ProductCode, string ProductName, string Description);
        Task<IReadOnlyList<ShippingTIMSSortingModel>> GetListSearchShippingSortingTIMSPP(string ShippingCode);
        Task<IReadOnlyList<ShippingFGSortingDetailModel>> GetListShippingTIMSSorting(string ShippingCode);
        Task<IReadOnlyList<ShippingFGSortingDetailModel>> GetShippingScanPPCountbuyer(string ShippingCode);
        Task<IReadOnlyList<ShippingFGSortingDetailModel>> CheckSFinfo(string ShippingCode);
        Task<ShippingFGSortingDetailModel> isCheckExistSF(string ShippingCode, string buyer_qr);
        Task<WMaterialnfo> isCheckExistBuyerQRSF(string buyer_qr);
        Task<int> UpdateBuyerFGWMaterialInfo(WMaterialnfo item);
        Task<int> updateShippingFGSorting(ShippingFGSortingDetailModel item);
        Task<ShippingTIMSSortingModel> GetLastShippingTIMSSorting();
        Task<int> InsertToShippingTIMSSorting(ShippingTIMSSortingModel item);
        Task<WMaterialnfo> CheckIsExistBuyerCode(string BuyerCode);
        Task<int> ModifyShippingTIMSSorting(ShippingTIMSSortingModel item);
        Task<int> UpdateShippingSortingTIMS(ShippingTIMSSortingDetailModel item, string data);
        Task<int> InsertShippingSortingTIMSDetail(string ShippingCode, string ListId, string UserID);
        Task<IReadOnlyList<ShippingTIMSSortingDetailModel>> GetListShippingFGSorting(string ShippingCode);
        Task<int> DeleteToExportToMachine(int id);
        Task<int> DeleteMfaclineQC(string ml_no, string ml_tims);
        Task<IReadOnlyList<MaterialInfoTIMS>> CheckBobbinDestroyMMS(int wmtid, string MaterialCode,string lct_cd);
        Task<int> SPUpdateDestroyMMS(int id, string status, string mt_cd, string bb_no, string userid);
        Task<Models.WOModel.WMaterialInfoNew> CheckBobbinRedoMMS(int wmtid, string status, string MaterialCode);
        Task<int> SPUpdatesRedoMMS(int id,  string status, string userid);
        Task<string> ChecktypeProduct(string style_no);
        Task<MaterialInfoTIMS> FindOneMaterialInfoByIdBuyer(int wmtid);
        Task<Generalfg> FindOneBuyerInfoByBuyer(string buyer_code);
        Task<int> UpdateBuyerQRGeneral(Generalfg item);
        Task<int> UpdateMaterialInfoTimsBuyer(int wmtid, string buyer_qr, string chg_id);
        Task<int> CheckCountExistFacline(string material_code);
        Task<MaterialInfoTIMS> GetwmtinfotimswithBobbin( string status, string bb_no);
        Task<Models.WOModel.WMaterialInfoNew> GetwmtinfoMMSwithBobbin(string status, string bb_no);
        Task<BobbinInfo> GetBobbinInfoByMaterialCode(string mt_cd);
        Task<int> UpdateMaterialBBMMS(int wmtid, string bb_no);
        Task<int> UpdateMaterialBBTIMS(int wmtid, string bb_no);
        Task<int> CheckCountExistFaclineRoll(string material_code, string material_lot);
        Task<IReadOnlyList<ATMTIMSEFF>> getHieuSuat(string ProductCode, string ProductName, string PO, string Remark, string bom_type);
        Task<IReadOnlyList<w_material_mapping>> GetmaterialmappingStsShare(string mt_lot);
        Task<Models.WOModel.WMaterialInfoNew> GetWMaterialInfoWithmtcdLikemms(string mt_cd);
        Task<int> UpdateQtyMaterialMMS(int quantity, int wmtid, string userid);
        List<truyxuatlot> TruyxuatlistlotOQC(string mt_cd, string tentam, string buyer_qr, string atno);
    }
}
